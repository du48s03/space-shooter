<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
y = 1;
x = random(room_width);
if(x==0) x += 1;
if(x = room_width) x-=1;
if(ctrl_setting.buff_freq == 0)
    alarm[0] = -1;
else{
    var variation = 0.7+random(0.6);
    //show_message("variation = "+string(variation));
    alarm[0] = round(room_speed*((4-ctrl_setting.buff_freq)*3 + 2)*variation);
}
//show_message("alarm[0] = "+string(alarm[0]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset alarm and position
var buff_ind = floor(random(5));
var buff = noone;
switch(buff_ind){
    case 0:
        buff = instance_create(x,y,obj_health_pack);
        break;
    case 1:
        buff = instance_create(x,y,obj_speed_up);
        break;
    case 2:
        buff = instance_create(x,y,obj_scatter_shot);
        break;
    case 3:
        buff = instance_create(x,y,obj_anti_gravity);
        break;
    case 4:
        buff = instance_create(x,y,obj_fast_regen);
        break;
}

buff.vspeed = 1;
buff.hspeed = -1+random(2);

x = random(room_width);
if(x == 0) x+=1;
if(x == room_width) x-=1;
if(ctrl_setting.buff_freq == 0)
    alarm[0] = -1;
else{
    var variation = 0.7+random(0.6);
    alarm[0] = round(room_speed*((4-ctrl_setting.buff_freq)*3 + 2)*variation);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
