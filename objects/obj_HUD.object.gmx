<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing
//player
//xoffset
//yoffset
//width
//height
hmargin = 10;
vmargin = 10;
xsep = 5;
xinner_margin = 3;
yinner_margin = 3;
num_status_per_row=5;

status_icon[4]=spr_fast_regen;
status_icon[3]=spr_anti_gravity;
status_icon[2]=spr_scatter_shot;
status_icon[1]=spr_speed_up;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///following the view
/*
xoffset = view_wview[view_current];
yoffset = 0;
width = view_wview[view_current]/4;
height = view_hview[view_current];
x = view_xview[0] + xoffset;
y = view_yview[0] + yoffset;
*/
x = view_xview[0];
y = view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Displaying weapon pannel
display_set_gui_maximise();
if(instance_exists(player)){
//displaying weapon pannel
    var xpos = hmargin+xoffset;
    var ypos = 0;
    var max_ywidth = 0;
    for(i = 0;i&lt;3;i++){
        var weap_ind = ds_map_find_value(ctrl_setting.weapon_index,ctrl_setting.weapon_chosen[player.player_id, i]);
        var chosen_sprite = ctrl_setting.weapon_icons[weap_ind];

        var xwidth = (width-2*hmargin-2*xsep)/3;
        var ywidth = sprite_get_height(chosen_sprite) * xwidth/sprite_get_width(chosen_sprite);
        max_ywidth = max(ywidth, max_ywidth);                        
        
        ypos = yoffset+height - 2*vmargin - 2*yinner_margin - ywidth;
        
        if(player.now_weapon == i){
            draw_set_color(c_white);
            draw_rectangle(
                xpos-xinner_margin,
                ypos+vmargin, 
                xpos+xwidth+xinner_margin,
                ypos+2*yinner_margin+ywidth+vmargin,
                false);
        }
        
        draw_sprite_stretched(chosen_sprite,0,xpos,ypos+vmargin+yinner_margin,xwidth, ywidth);
        draw_set_color(c_gray);
        draw_set_alpha(0.7);
        draw_rectangle(xpos
                        ,ypos+vmargin+yinner_margin+ywidth*(1-player.weapon_timer[i]/ctrl_setting.weapon_timers[weap_ind])
                        ,xpos+xwidth
                        ,ypos+vmargin+yinner_margin+ywidth,false);
        draw_set_alpha(1);
        
        xpos+= xsep + xwidth; 
    }
    
    //displaying buffs
    xpos = xoffset+hmargin;
    for(i = 1;i&lt;5;i++){
        if(player.status[i]&gt;0){
            var chosen_sprite = status_icon[i];
            var xwidth = (width-2*hmargin-(num_status_per_row-1)*xsep)/num_status_per_row;
            var ywidth = sprite_get_height(chosen_sprite) * xwidth/sprite_get_width(chosen_sprite);    
            
            ypos = yoffset+height-2*vmargin-2*yinner_margin - max_ywidth - ywidth;
            draw_sprite_stretched(chosen_sprite,0,xpos,ypos,xwidth, ywidth);
            /*
            draw_set_color(c_black);
            draw_set_alpha(0.7);
            draw_rectangle(xpos
                            ,ypos
                            ,xpos+xwidth
                            ,ypos+ywidth*(1-player.status[i]/player.status_time[i] )
                            ,false);
            draw_set_alpha(1);
            */
            xpos+= xsep + xwidth;    
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
