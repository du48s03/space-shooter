<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_planet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_base</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
event_inherited();
fall_dmg_threshold = 1;
falling_dmg = 35;
bounce_coeff = 0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_base">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
if(other.object_index == obj_player){
    arr[1] = 0; perp_speed(other, self, arr);
    var perp_spd = power(arr[0]*arr[0]+arr[1]*arr[1],0.5);
    if(perp_spd &gt; fall_dmg_threshold)  other.hp -= perp_spd*falling_dmg;
    elastic_collision(self, other, -1, 1);
    arr[1] = 0;
    perp_speed(other, self, arr);
    other.hspeed += arr[0]*(bounce_coeff-1);
    other.vspeed += arr[1]*(bounce_coeff-1);
    var len = (sprite_get_bbox_bottom(sprite_index)-sprite_get_bbox_top(sprite_index))/2
            + (sprite_get_bbox_bottom(other.sprite_index)-sprite_get_bbox_top(other.sprite_index))/2+2;
    var dx = other.x - x;
    var dy = other.y - y;
    if(power(dx*dx+dy*dy,0.5) &lt; len){
        other.x = x + len* dx/power(dx*dx+dy*dy,0.5);
        other.y = y + len* dy/power(dx*dx+dy*dy,0.5);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
